/*! For license information please see bundle.js.LICENSE.txt */
(()=>{"use strict";var t={913:t=>{function e(t){return!(!t||"INPUT"!==t.tagName&&"TEXTAREA"!==t.tagName&&!t.isContentEditable)}t.exports=class{constructor(t){this.apiKey=t.apiKey||"REVERIE_API_KEY",this.appId=t.appId||"REVERIE_APP_ID",this.baseUrl=t.baseUrl||"https://revapi.reverieinc.com",this.isListening=!1;let e=document.createElement("script");e.src="https://cdn.jsdelivr.net/npm/reverie-stt-sdk/dist/bundle.js",document.body.appendChild(e)}async transliterate({text:t,src_lang:e,tgt_lang:a,domain:r=1}){try{if(!e)throw new Error("Source language is required");if(!a)throw new Error("Target language is required");if(!t)throw new Error("Text to transliterate is required");let n=await fetch(this.baseUrl,{method:"POST",headers:{"Content-Type":"application/json","REV-API-KEY":this.apiKey,"REV-APP-ID":this.appId,src_lang:e,tgt_lang:a,domain:r,cnt_lang:"en","REV-APPNAME":"transliteration"},body:JSON.stringify({data:[t],isBulk:!1,ignoreTaggedEntities:!1})});if(n=await n.json(),n&&n.responseList&&n.responseList.length>0)return n.responseList[0].outString[0];throw new Error("Failed to transliterate text")}catch(t){return t.message}}async analyze_text({text:t,src_lang:e,tgt_lang:a,translation_domain:r,moderation_types:n}){try{if(!e)throw new Error("Content language is required");if(!t)throw new Error("Text is required for text analysis");const i=`${this.baseUrl}/api/v2/text-analyse?translate=true&summary=true&sentiment=false&detect_entities=true&content_safety=true&pii_redaction=true`,o={"Content-Type":"application/json","REV-API-KEY":this.apiKey,"REV-APP-ID":this.appId,"REV-APPNAME":"text-analysis"},s={text:t,language:e,pii_redaction:{redact_pii_sub:"entity_name",redact_pii_types:[]},summary:{summary_model:"gemma2:2b",summary_type:"gist"},entity_recognition:{entity_types:[]},sentiment:{level:"whole"},content_moderation:{moderation_types:n||["hate_speech","profanity"]}};a&&(s.traslation={target_language:a,translation_domain:r||"generic"});let l=await fetch(i,{method:"POST",headers:o,body:JSON.stringify(s)});if(l=await l.json(),l&&l.results)return l.results;throw new Error("Failed to analyze text")}catch(t){return t.message}}async identify_language_by_text({text:t}){try{if(!t)throw new Error("Text to identify is required");if(t.length>512)throw new Error("Text exceeds maximum length of 512 characters");let e=await fetch(this.baseUrl,{method:"POST",headers:{"Content-Type":"application/json","REV-API-KEY":this.apiKey,"REV-APP-ID":this.appId,"REV-APPNAME":"lang_id_text"},body:JSON.stringify({text:t,max_length:Math.pow(2,Math.floor(Math.sqrt(t.length))+1)})});if(e=await e.json(),e)return e;throw new Error("Failed to detect text")}catch(t){return t.message}}async translate({text:t,src_lang:e,tgt_lang:a,domain:r}){try{if(!e)throw new Error("Source language is required");if(!a)throw new Error("Target language is required");if(!t)throw new Error("Text to translate is required");let n=await fetch(this.baseUrl,{method:"POST",headers:{"Content-Type":"application/json","REV-API-KEY":this.apiKey,"REV-APP-ID":this.appId,src_lang:e,tgt_lang:a,domain:r||"generic","REV-APPNAME":"localization","REV-APPVERSION":"3.0"},body:JSON.stringify({data:[t],nmtMask:!0,nmtMaskTerms:{},enableNmt:!0,enableLookup:!0})});if(n=await n.json(),n&&n.responseList&&n.responseList.length>0)return n.responseList[0].outString;throw new Error("Failed to translate text")}catch(t){return t.message}}async stt_batch({audioFile:t,src_lang:e,domain:a}){try{if(!e)throw new Error("Source language is required");if(!t)throw new Error("File to transcribe is required");const r=new FormData;r.append("audio_file",t);let n=await fetch("https://revapi.reverieinc.com/",{method:"POST",headers:{src_lang:e,domain:a||"generic","REV-APPNAME":"stt_file","REV-API-KEY":this.apiKey,"REV-APP-ID":this.appId},body:r});if(n=await n.json(),n&&n.display_text)return n.display_text;throw new Error("Failed to transcribe text")}catch(t){return t.message}}async text_to_speech({text:t,speaker:e,speed:a,pitch:r,format:n="WAV"}){try{if(!e)throw new Error("Speaker is required for TTS");if(!t)throw new Error("Text is required for TTS");if(!["WAV","MP3"].includes(n))throw new Error("Invalid audio format. Supported formats are wav and mp3");const i={text:t,speed:parseFloat(a),pitch:parseFloat(r),format:"WAV",speaker:e};let o=await fetch(this.baseUrl,{method:"POST",headers:{"Content-Type":"application/json","REV-API-KEY":this.apiKey,"REV-APP-ID":this.appId,"REV-APPNAME":"tts",speaker:e},body:JSON.stringify(i)}),s=await o.blob();if(o)return s;throw new Error("Failed to do tts for the text")}catch(t){return t}}async init_stt({src_lang:t,domain:a,silence:r,continuous:n,logging:i,timeout:o,callback:s,element:l}){if(!t)throw new Error("Source language is required for STT");if(!s&&!l)throw new Error("Callback or element is required for STT");if(s&&"function"!=typeof s)throw new Error("Callback must be a function");if(l&&"object"!=typeof l)throw new Error("Element must be a DOM element");if(a&&"string"!=typeof a)throw new Error("Domain must be a string");if(r&&"number"!=typeof r)throw new Error("Silence must be a number");if(n&&"boolean"!=typeof n)throw new Error("Continuous must be a boolean");if(i&&"boolean"!=typeof i)throw new Error("Logging must be a boolean");if(o&&"number"!=typeof o)throw new Error("Timeout must be a number");try{await window.stt_stream.initSTT({apikey:this.apiKey,appId:this.appId,language:t,domain:a||"generic",silence:r||1,continuous:n||1,logging:!i||!1!==i,timeout:o||180,eventHandler:a=>function(t,a,r,n){let i=t.data;r&&e(r)&&("FINAL_RESULT"===t.event||"PARTIAL_RESULTS"===t.event&&["es-ES","fr-FR","ar-SA"].includes(n))&&document.execCommand("insertText",!1,i),r&&!e(r)||!a||a({stt_event:{...t}})}(a,s,l,t),errorHandler:t=>console.error("Error:",t)}),console.log("STT Streaming initialized successfully")}catch(t){console.error("STT Initialization failed:",t)}}async start_stt(){await window.stt_stream.startSTT(),this.isListening=!0}async stop_stt(){await window.stt_stream.stopSTT(),this.isListening=!1}async toggle_stt(){this.isListening?await this.stop_stt():await this.start_stt()}async translateDocument({sourceLanguage:t,targetLanguage:e,uploadedFile:a}){try{const r=new FormData;r.append("sourceLanguage",t||"english"),r.append("targetLanguage",e||"hindi"),r.append("projectFiles",a);const n=await fetch("https://revapi.reverieinc.com/translate_doc_import",{method:"POST",headers:{"REV-APP-ID":this.appId,"REV-APPNAME":"doc_translation","REV-API-KEY":this.apiKey},body:r}),i=await n.json();if(n.ok&&i.projectId)return this.checkStatus(i.projectId,e);throw new Error("Error in translation process")}catch(t){throw new Error("Translation failed: "+t.message)}}async checkStatus(t,e){return new Promise((a,r)=>{const n=async()=>{try{const r=await fetch(`https://revapi.reverieinc.com/translate_doc_status?doc_id=${t}`,{headers:{"REV-APP-ID":this.appId,"REV-APPNAME":"doc_translation","REV-API-KEY":this.apiKey}}),i=await r.json();i.success&&"completed"===i.message?a(this.downloadTranslatedFile(t,e)):setTimeout(n,2e3)}catch(t){r(new Error("Error checking status: "+t.message))}};n()})}async downloadTranslatedFile(t,e){try{const a=await fetch("https://revapi.reverieinc.com/translate_doc_export",{method:"POST",headers:{"Content-Type":"application/json","REV-APP-ID":this.appId,"REV-APPNAME":"doc_translation","REV-API-KEY":this.apiKey},body:JSON.stringify({unitId:t,targetLanguages:[e]})}),r=await a.json();if(r.success)return Object.values(r.data.targetURLS).forEach(t=>{Object.values(t).forEach(t=>{window.open(t,"_blank")})}),"Translation complete! File is ready for download.";throw new Error("Error downloading translation")}catch(t){throw new Error("Download failed: "+t.message)}}async uploadDocument({file:t,file_type:e,languages:a,ocr_type:r}){try{if(!t)throw new Error("Please select a file");if(e||(e="txt"),!a)throw new Error("Languages parameter is required");if(!r||"layout_ocr"!==r&&"only_ocr"!==r)throw new Error("Invalid ocr_type. Must be 'layout_ocr' or 'only_ocr'");if("img"===e&&"layout_ocr"===r)throw new Error("Layout OCR is not supported for images. Please select Only OCR.");const n=new FormData;n.append("file",t),n.append("file_type",e),n.append("languages",a),n.append("ocr_type",r);let i=await fetch(this.baseUrl+"/process_doc",{method:"POST",headers:{"REV-APP-ID":this.appId,"REV-API-KEY":this.apiKey,"REV-APPNAME":"ocr"},body:n});return"layout_ocr"===r?await i.blob():await i.text()}catch(t){return t.message}}async uploadAudio({file:t}){try{if(!t)throw new Error("Please select an audio file");const e=new FormData;e.append("audio_file",t);let a=await fetch(this.baseUrl+"/upload",{method:"POST",headers:{"REV-API-KEY":this.apiKey,"REV-APP-ID":this.appId,"REV-APPNAME":"slid"},body:e}),r=await a.json();if(!r.success)throw new Error(r.cause);return{transcriptionId:r.id,language:r.language,confidence:r.confidence}}catch(t){throw t}}async transcribeAudio({language:t,subtitles:e,audioFile:a}){if(!t||void 0===e||!a)throw new Error("Missing required fields: language, domain, subtitles, or audioFile");try{const r=new FormData;r.append("file",a);const n=await fetch(`${this.baseUrl}/upload`,{method:"POST",headers:{src_lang:t,domain:"generic","REV-API-KEY":this.apiKey,"REV-APPNAME":"stt_batch","REV-APP-ID":this.appId,subtitles:e.toString()},body:r}),i=await n.json();if(n.ok&&i.job_id)return this.checkAudioStatus(i.job_id);throw new Error("Upload failed or invalid response")}catch(t){throw new Error("Transcription failed: "+t.message)}}async checkAudioStatus(t){return new Promise((e,a)=>{const r=async()=>{try{const n=await fetch(`${this.baseUrl}/status?job_id=${t}`,{headers:{"REV-API-KEY":this.apiKey,"REV-APPNAME":"stt_batch","REV-APP-ID":this.appId}}),i=await n.json();"completed"===i.status?e(this.getTranscript(t)):"failed"===i.status?a(new Error("Transcription failed on server")):setTimeout(r,3e3)}catch(t){a(new Error("Error checking transcription status: "+t.message))}};r()})}async getTranscript(t){try{const e=await fetch(`${this.baseUrl}/transcript?job_id=${t}`,{headers:{"REV-API-KEY":this.apiKey,"REV-APPNAME":"stt_batch","REV-APP-ID":this.appId}}),a=await e.json();if(e.ok&&a.result)return a.result;throw new Error("Transcript not available")}catch(t){throw new Error("Error fetching transcript: "+t.message)}}}}},e={};function a(r){var n=e[r];if(void 0!==n)return n.exports;var i=e[r]={exports:{}};return t[r](i,i.exports,a),i.exports}a.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return a.d(e,{a:e}),e},a.d=(t,e)=>{for(var r in e)a.o(e,r)&&!a.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},a.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var r=a(913);const n=new(a.n(r)())({apiKey:"021f066ef38b4f7113289e23b8b9efc69ba9af6a",appId:"com.tribhu11"});let i="",o="",s="",l="",c=!1;const d=document.getElementById("transcript"),p=document.getElementById("toggleBtn"),u=document.getElementById("language"),h=document.getElementById("resetBtn");[{key:"en",label:"English"},{key:"hi",label:"Hindi (हिन्दी)"},{key:"as",label:"Assamese (অসমীয়া)"},{key:"bn",label:"Bangla (বাংলা)"},{key:"gu",label:"Gujarati (ગુજરાતી)"},{key:"kn",label:"Kannada (ಕನ್ನಡ)"},{key:"ml",label:"Malayalam (മലയാളം)"},{key:"mr",label:"Marathi (मराठी)"},{key:"or",label:"Odia (ଓଡ଼ିଆ)"},{key:"pa",label:"Punjabi (ਪੰਜਾਬੀ)"},{key:"ta",label:"Tamil (தமிழ்)"},{key:"te",label:"Telugu (తెలుగు)"}].forEach(t=>{const e=document.createElement("option");e.value=t.key,e.textContent=t.label,u.appendChild(e)});const g=async()=>{const t=u.value;try{await n.init_stt({src_lang:t,domain:"generic",silence:1,continuous:!0,logging:!0,timeout:180,callback:w,errorHandler:t=>console.error("Error:",t)}),console.log("STT Streaming initialized successfully")}catch(t){console.error("STT Initialization failed:",t)}},w=t=>{if(!t.stt_event)return void console.error("Invalid STT event received:",t);let e=t.stt_event;console.log({sttEvent:e}),"FINAL_RESULT"===e.event?(i=e.data,o="",s=l+" "+i,E()):"PARTIAL_RESULTS"===e.event&&(["es-ES","fr-FR","ar-SA"].includes(u.value)&&(d.value=e.data),o=e.data,E())},E=()=>{""!==o?d.value=l+" "+o:""!==i&&(d.value=s,l=s)};p.addEventListener("click",async()=>{c?(await n.stop_stt(),c=!1,p.textContent="Start Speaking"):(await g(),await n.start_stt(),c=!0,p.textContent="Stop Speaking")}),u.addEventListener("change",async()=>{c&&(window.stt_stream.stopSTT(),await g(),window.stt_stream.startSTT())}),h.addEventListener("click",()=>{c&&(window.stt_stream.stopSTT(),c=!1,p.textContent="Start Speaking"),i="",o="",s="",l="",d.value=""})})();